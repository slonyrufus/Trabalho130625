@model HospitalVidaPlenaHOSPISIM.Models.ProfissionalSaude

@{
    ViewBag.Title = "Registrar novo profissional de saude";
    Layout = null;
}

<head>
    <title>Editar atendimento</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background: #f4f7fb;
            color: #1e293b;
        }

        .form-container {
            background: white;
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 8px 20px rgb(0 0 0 / 0.1);
            max-width: 700px;
            margin: 40px auto;
        }

        .form-group {
            margin-bottom: 16px;
        }

            .form-group label {
                font-weight: 600;
                margin-bottom: 6px;
                display: block;
            }

            .form-group input,
            .form-group select,
            .form-group textarea {
                width: 100%;
                padding: 12px;
                border: 1px solid #cbd5e1;
                border-radius: 8px;
            }

        .form-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .btn-primary {
            background: #2563eb;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
        }

        .btn-secondary {
            background: #64748b;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-size: 16px;
            text-decoration: none;
            cursor: pointer;
        }

        .text-danger {
            color: #dc2626;
            font-size: 14px;
        }

        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: #dc2626;
            color: white;
            padding: 16px 24px;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            display: none;
        }

            .toast.show {
                display: block;
                animation: fadein 0.5s, fadeout 0.5s 4s;
            }
        

        body {
            margin: 0;
            font-family: 'Inter', sans-serif;
            background: #f4f7fb;
            color: #1e293b;
            min-height: 100vh;
            display: grid;
            grid-template-areas:
                "header"
                "main";
            grid-template-rows: 60px 1fr;
        }

        a {
            color: inherit;
            text-decoration: none;
        }

            a:focus,
            button:focus {
                outline: 2px solid #2563eb;
                outline-offset: 2px;
            }

        header {
            grid-area: header;
            background: #2563eb;
            display: flex;
            align-items: center;
            padding: 0 24px;
            color: #f1f5f9;
            font-weight: 600;
            font-size: 1.25rem;
            position: sticky;
            top: 0;
            z-index: 1000;
            box-shadow: 0 2px 8px rgb(0 0 0 / 0.15);
            gap: 16px;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 8px;
            flex-shrink: 0;
        }

        .logo-icon {
            font-size: 28px;
            color: #fbbf24;
        }

        .logo-text {
            letter-spacing: 1.2px;
        }

        .header-title {
            font-size: 1.25rem;
            font-weight: 600;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }


        h1 {
            margin-top: 0;
            color: #2563eb;
            font-weight: 700;
            font-size: 2rem;
            margin-bottom: 24px;
        }

        ul.atendimentos-list {
            list-style: none;
            margin: 0;
            padding: 0;
        }

        li.atendimento-item {
            padding: 20px 24px;
            border-radius: 12px;
            background: #f9fafb;
            box-shadow: 0 2px 8px rgb(37 99 235 / 0.1);
            margin-bottom: 16px;
            transition: box-shadow 0.3s ease, transform 0.3s ease;
            cursor: pointer;
        }

            li.atendimento-item:hover,
            li.atendimento-item:focus-within {
                box-shadow: 0 8px 24px rgb(37 99 235 / 0.3);
                transform: translateY(-4px);
                outline: none;
            }

        a.atendimento-link {
            display: block;
            color: inherit;
            text-decoration: none;
        }

        .item-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 8px;
        }

        .item-id {
            font-weight: 600;
            font-size: 1.125rem;
            color: #1e293b;
            overflow-wrap: anywhere;
        }

        .item-status {
            font-weight: 600;
            color: #2563eb;
            background: #dbeafe;
            padding: 4px 12px;
            border-radius: 16px;
            font-size: 0.875rem;
            white-space: nowrap;
        }

        .item-details {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            gap: 12px 24px;
            color: #475569;
            font-size: 0.95rem;
        }

            .item-details span {
                display: block;
            }

        .label {
            font-weight: 600;
            color: #334155;
            text-transform: uppercase;
            margin-bottom: 2px;
            font-size: 0.75rem;
            letter-spacing: 0.05em;
        }
    </style>
</head>
<header>
    <div class="logo" tabindex="0">
        <span class="material-icons logo-icon" aria-hidden="true">local_hospital</span>
        <span class="logo-text">Sistema Hospitalar</span>
    </div>
    <div class="header-title" aria-live="polite" aria-atomic="true">Novo atendimento</div>
</header>
<nav class="sidebar" id="sidebar" aria-label="Menu principal de navegação">
    <ul>
        <li>
            <a href="@Url.Action("Index", "Home")" tabindex="0">
                <span class="material-icons" aria-hidden="true">home</span>
                <span class="label">Página Inicial</span>
            </a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Paciente")" tabindex="0">
                <span class="material-icons" aria-hidden="true">people</span>
                <span class="label">Pacientes</span>
            </a>
        </li>
        <li>
            <a href="@Url.Action("Index", "ProfissionalSaude")" tabindex="0">
                <span class="material-icons" aria-hidden="true">medical_services</span>
                <span class="label">Profissionais de Saúde</span>
            </a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Atendimento")" tabindex="0">
                <span class="material-icons" aria-hidden="true">event_note</span>
                <span class="label">Atendimentos</span>
            </a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Internacao")" tabindex="0">
                <span class="material-icons" aria-hidden="true">hotel</span>
                <span class="label">Internações</span>
            </a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Exame")" tabindex="0">
                <span class="material-icons" aria-hidden="true">science</span>
                <span class="label">Exames</span>
            </a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Prescricao")" tabindex="0">
                <span class="material-icons" aria-hidden="true">receipt_long</span>
                <span class="label">Prescrições</span>
            </a>
        </li>
        <li>
            <a href="@Url.Action("Index", "AltaHospitalar")" tabindex="0">
                <span class="material-icons" aria-hidden="true">assignment_turned_in</span>
                <span class="label">Altas Hospitalares</span>
            </a>
        </li>
        <li>
            <a href="@Url.Action("Index", "Prontuario")" tabindex="0">
                <span class="material-icons" aria-hidden="true">folder_shared</span>
                <span class="label">Prontuários</span>
            </a>
        </li>
    </ul>
</nav>

    <header>
        <div class="logo" tabindex="0">
            <span class="material-icons logo-icon" aria-hidden="true">local_hospital</span>
            <span class="logo-text">Sistema Hospitalar</span>
        </div>
        <div class="header-title" aria-live="polite" aria-atomic="true">Novo atendimento</div>
    </header>

<main>
    <div class="form-container">
        @using (Html.BeginForm("Create", "ProfissionalSaude", FormMethod.Post, new { @class = "profissional-form" }))
        {
            @Html.AntiForgeryToken()

            <h1>@ViewBag.Title</h1>

            @* Hidden para o Id do profissional *@
            @Html.HiddenFor(m => m.Id)

            <div class="form-group">
                @Html.LabelFor(m => m.NomeCompleto, "Nome Completo", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.NomeCompleto, new { @class = "form-control", placeholder = "Informe o nome completo", required = "required", aria_required = "true" })
                @Html.ValidationMessageFor(m => m.NomeCompleto, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CPF, "CPF", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.CPF, new { @class = "form-control", placeholder = "000.000.000-00", required = "required", aria_required = "true" })
                @Html.ValidationMessageFor(m => m.CPF, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Email, "Email", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Email, new { @type = "email", @class = "form-control", placeholder = "email@exemplo.com", required = "required", aria_required = "true" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Telefone, "Telefone", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Telefone, new { @class = "form-control", placeholder = "(00) 00000-0000", required = "required", aria_required = "true" })
                @Html.ValidationMessageFor(m => m.Telefone, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.RegistroConselho, "Registro no Conselho", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.RegistroConselho, new { @class = "form-control", placeholder = "Informe o número de registro", required = "required", aria_required = "true" })
                @Html.ValidationMessageFor(m => m.RegistroConselho, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.TipoRegistro, "Tipo de Registro", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.TipoRegistro, new { @class = "form-control", placeholder = "CRM, COREN, etc.", required = "required", aria_required = "true" })
                @Html.ValidationMessageFor(m => m.TipoRegistro, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.EspecialidadeId, "Especialidade", new { @class = "form-label" })
                @Html.DropDownListFor(
                    m => m.EspecialidadeId,
                    (SelectList)ViewBag.Especialidades,
                    "Selecione uma especialidade",
                    new { @class = "form-control", required = "required", aria_required = "true" }
                )
                @Html.ValidationMessageFor(m => m.EspecialidadeId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.DataAdmissao, "Data de Admissão", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.DataAdmissao, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", required = "required", aria_required = "true" })
                @Html.ValidationMessageFor(m => m.DataAdmissao, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.CargaHorariaSemanal, "Carga Horária Semanal (h)", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.CargaHorariaSemanal, new { @type = "number", @class = "form-control", min = "0", required = "required", aria_required = "true" })
                @Html.ValidationMessageFor(m => m.CargaHorariaSemanal, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Turno, "Turno", new { @class = "form-label" })
                @Html.TextBoxFor(m => m.Turno, new { @class = "form-control", placeholder = "Manhã, Tarde, Noite", required = "required", aria_required = "true" })
                @Html.ValidationMessageFor(m => m.Turno, "", new { @class = "text-danger" })
            </div>

            <div class="form-group form-check">
                @Html.CheckBoxFor(m => m.Ativo, new { @class = "form-check-input" })
                @Html.LabelFor(m => m.Ativo, "Ativo", new { @class = "form-check-label" })
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Salvar</button>
                @Html.ActionLink("Cancelar", "Index", "ProfissionalSaude", null, new { @class = "btn btn-secondary" })
            </div>
        }
    </div>
</main>


    <script>
        const form = document.getElementById('profissional-form');
        const toast = document.getElementById('toast');
        const cancelarBtn = document.getElementById('cancelar');

        form.addEventListener('submit', event => {
            if (!form.checkValidity()) {
                event.preventDefault();
                form.reportValidity();
                return;
            }
            toast.classList.add('show');
            setTimeout(() => {
                toast.classList.remove('show');
            }, 5000);
        });

        cancelarBtn.addEventListener('click', event => {
        });
    </script>